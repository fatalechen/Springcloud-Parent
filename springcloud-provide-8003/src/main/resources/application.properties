#端口
server.port=8003
#注册
eureka.client.service-url.defaultZone=http://test1.com:7001/eureka/,http://test2.com:7002/eureka/,http://test3.com:7003/eureka/
#服务名
spring.application.name=provide
#显示自己的名字
eureka.instance.instance-id=dept8003
#显示ip
eureka.instance.prefer-ip-address=true



#热部署
spring.freemaker.cashe=false
spring.devtools.restart.enable=true

spring.thymeleaf.cache=false
pring.http.encoding.charset=UTF-8
spring.http.encoding.force=true
spring.http.encoding.enabled=true
server.tomcat.uri-encoding=UTF-8


#与mysql数据库连接
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://129.204.35.21:3306/cloudDb3?useUnicode=true&characterEncoding=utf-8&serverTimezone=GMT%2B8&useSSL=false&verifyServerCertificate=false
spring.datasource.username=root
spring.datasource.password=cgz12345678
#使用druid连接池
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
#druid连接池连接池参数配置
#初始化时建立物理连接的个数。初始化发生在显示调用init方法，或者第一次getConnection时
spring.datasource.initialSize=5
#最大连接池数量
spring.datasource.maxActive=10
#获取连接时最大等待时间
spring.datasource.maxWait=3000
#最小连接池数量
spring.datasource.minIdle=3
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=300000
#验证数据库连接的有效性
spring.datasource.validationQuery=SELECT 1 FROM DUAL
#指明连接是否被空闲连接回收器(如果有)进行检验.如果检测失败,则连接将被从池中去除
#注意: 设置为true后如果要生效,validationQuery参数必须设置为非空字符串
spring.datasource.testWhileIdle=true
#指明是否在从池中取出连接前进行检验,如果检验失败,则从池中去除连接并尝试取出另一个.
#注意: 设置为true后如果要生效,validationQuery参数必须设置为非空字符串
spring.datasource.testOnBorrow=false
#指明是否在归还到池中前进行检验
#注意: 设置为true后如果要生效,validationQuery参数必须设置为非空字符串
spring.datasource.testOnReturn=false
#开启池的prepared statement 池功能
spring.datasource.poolPreparedStatements=true
#statement池能够同时分配的打开的statements的最大数量, 如果设置为0表示不限制
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
#stat功能（监控）、wall功能（sql防火墙）、需要配置log4j的配置文件否则会报错，没有logback过滤器，具体看FilterManager的public static Properties loadFilterConfig() throws IOException方法
#spring.datasource.filters=stat,wall,log4j2
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000


mybatis.mapper-locations=classpath:mapper/*.xml

info.app.name=springcloud-provide
info.company.name=www.cgz0811.com
info.build.artifactid=$project.artifactId$
info.build.version=$project.version$

#
#feign.hystrix.enabled=false